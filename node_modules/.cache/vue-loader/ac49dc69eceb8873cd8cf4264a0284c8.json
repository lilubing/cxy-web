{"remainingRequest":"/Users/work/webworkspace/cxy-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/work/webworkspace/cxy-web/src/views/system/menu-button/index.vue?vue&type=style&index=0&id=d35b5bc6&lang=scss&scoped=true&","dependencies":[{"path":"/Users/work/webworkspace/cxy-web/src/views/system/menu-button/index.vue","mtime":1610796832976},{"path":"/Users/work/webworkspace/cxy-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/work/webworkspace/cxy-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/work/webworkspace/cxy-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/work/webworkspace/cxy-web/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/work/webworkspace/cxy-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/work/webworkspace/cxy-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnJvbGV7CiAgLnJvbGUtdGFibGV7CiAgICBtYXJnaW46IDIwcHggMHB4OwogIH0KfQouZWwtY2FyZHsKICBib3JkZXItcmFkaXVzOiAwcHg7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/system/menu-button","sourcesContent":["<template>\n  <el-card shadow=\"never\">\n    <search-from :menu-group=\"menuGroup\" />\n    <div class=\"app-container\">\n      <el-table\n        :data=\"data\"\n        style=\"width: 100%;margin-bottom: 20px;\"\n        row-key=\"menuButtonId\"\n        border\n        default-expand-all\n        :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\"\n      >\n        <el-table-column prop=\"name\" label=\"菜单按钮\" sortable width=\"250\" />\n        <el-table-column align=\"center\" header-align=\"center\" prop=\"uri\" width=\"250\" label=\"菜单url\" />\n        <el-table-column align=\"center\" header-align=\"center\" prop=\"btnId\" label=\"按钮Id\" />\n        <el-table-column align=\"center\" header-align=\"center\" prop=\"menuButtonValue\" label=\"菜单按钮值\" />\n        <el-table-column align=\"center\" header-align=\"center\" prop=\"orders\" width=\"50\" label=\"排序\" />\n        <el-table-column align=\"center\" header-align=\"center\" width=\"70\" label=\"类型\">\n          <template slot-scope=\"scope\">\n            <el-tag v-if=\"scope.row.type === 1\" type=\"success\"> 按钮</el-tag>\n            <el-tag v-else type=\"primary\"> 菜单</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" header-align=\"center\" width=\"70\" label=\"状态\">\n          <template slot-scope=\"scope\">\n            <el-tag v-if=\"scope.row.state === 0\" type=\"success\"> 禁用</el-tag>\n            <el-tag v-else type=\"primary\"> 正常</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" header-align=\"center\" label=\"操作\" width=\"200\">\n          <template slot-scope=\"scope\">\n            <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\" @click=\"edit(scope.row)\">修改</el-button>\n            <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\" @click=\"remove(scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- <tree-table v-loading=\"loading\" class=\"table\" size=\"medium\" :data=\"data\" :eval-func=\"func\" :eval-args=\"args\" :expand-all=\"expandAll\" border>\n        <el-table-column align=\"center\" header-align=\"center\" prop=\"uri\" label=\"菜单按钮url\" />\n        <el-table-column align=\"center\" header-align=\"center\" prop=\"menuButtonId\" label=\"菜单按钮Id\" />\n        <el-table-column align=\"center\" header-align=\"center\" prop=\"menuButtonValue\" label=\"菜单按钮value\" />\n        <el-table-column align=\"center\" header-align=\"center\" prop=\"orders\" label=\"排序号\" />\n        <el-table-column align=\"center\" header-align=\"center\" label=\"类型\">\n          <template slot-scope=\"scope\">\n            <el-tag v-if=\"scope.row.type\" type=\"primary\"> 菜单</el-tag>\n            <el-tag v-else type=\"success\"> 按钮</el-tag>\n          </template>\n        </el-table-column>\n\n        <el-table-column align=\"center\" header-align=\"center\" label=\"操作\" width=\"200\">\n          <template slot-scope=\"scope\">\n            <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\" @click=\"edit(scope.row)\">修改</el-button>\n            <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\" @click=\"remove(scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </tree-table> -->\n    </div>\n    <add-form v-if=\"addVisable\" :visable=\"addVisable\" @handleAddHide=\"handleAddHide\" @getMenus=\"getMenus\" />\n    <edit-form v-if=\"editViasble\" :menu-button-id=\"menuButtonId\" :visable=\"editViasble\" @handleEditHide=\"handleEditHide\" @getMenus=\"getMenus\" />\n  </el-card>\n</template>\n\n<script>\n\n// import treeTable from '@/components/TreeTable'\nimport treeToArray from './customEval'\nimport SearchFrom from '@/components/SearchForm/Form.vue'\nimport EditForm from './EditForm'\nimport AddForm from './AddForm'\nimport { queryMenuList, deleteMenu } from '@/api/menu-button'\nexport default {\n  name: 'Index',\n  // components: { treeTable, SearchFrom, EditForm, AddForm },\n  components: { SearchFrom, EditForm, AddForm },\n  data() {\n    return {\n      loading: false,\n      editViasble: false,\n      addVisable: false,\n      menuButtonId: '',\n      menuGroup: {\n        inline: true,\n        items: [{\n          type: 'button',\n          label: '添加',\n          method: this.add,\n          icon: 'el-icon-plus'\n        }]\n      },\n      func: treeToArray,\n      expandAll: false,\n      data: [],\n      args: []\n    }\n  },\n  created() {\n    this.getMenus()\n  },\n  methods: {\n    handleAddHide() {\n      this.addVisable = false\n    },\n    edit(row) {\n      this.menuButtonId = row.menuButtonId\n      this.editViasble = true\n    },\n    add() {\n      this.addVisable = true\n    },\n    remove(row) {\n      this.$confirm('此操作将永久该菜单, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        deleteMenu(row.menuButtonId).then((response) => {\n          this.$message({\n            showClose: true,\n            message: '删除成功',\n            type: 'success'\n          })\n          this.getMenus()\n        }).catch(error => {\n          console.log(error)\n        })\n      })\n    },\n    getMenus() {\n      this.loading = true\n      queryMenuList().then((response) => {\n        this.loading = false\n        const data = response.data\n        if (data.code === 200) {\n          this.data = data.data\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    handleEditHide() {\n      this.editViasble = false\n    }\n\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .role{\n    .role-table{\n      margin: 20px 0px;\n    }\n  }\n  .el-card{\n    border-radius: 0px;\n  }\n</style>\n"]}]}