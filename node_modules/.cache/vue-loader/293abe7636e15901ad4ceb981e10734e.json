{"remainingRequest":"/Users/work/webworkspace/cxy-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/work/webworkspace/cxy-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/work/webworkspace/cxy-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/work/webworkspace/cxy-web/src/views/system/user/index.vue?vue&type=template&id=1930a3c4&scoped=true&","dependencies":[{"path":"/Users/work/webworkspace/cxy-web/src/views/system/user/index.vue","mtime":1611019258940},{"path":"/Users/work/webworkspace/cxy-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/work/webworkspace/cxy-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/work/webworkspace/cxy-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/work/webworkspace/cxy-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}