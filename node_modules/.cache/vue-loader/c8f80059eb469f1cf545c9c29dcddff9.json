{"remainingRequest":"/Users/work/webworkspace/cxy-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/work/webworkspace/cxy-web/src/views/system/role/AuthForm.vue?vue&type=style&index=0&id=3688e642&scoped=true&lang=css&","dependencies":[{"path":"/Users/work/webworkspace/cxy-web/src/views/system/role/AuthForm.vue","mtime":1610414323399},{"path":"/Users/work/webworkspace/cxy-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/work/webworkspace/cxy-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/work/webworkspace/cxy-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/work/webworkspace/cxy-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/work/webworkspace/cxy-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY3VzdG9tLXRyZWUtbm9kZSB7CiAgZmxleDogMTsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIGZvbnQtc2l6ZTogMTRweDsKICBwYWRkaW5nLXJpZ2h0OiA4cHg7Cn0K"},{"version":3,"sources":["AuthForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AuthForm.vue","sourceRoot":"src/views/system/role","sourcesContent":["<template>\n  <el-dialog\n    title=\"权限控制\"\n    :visible=\"visable\"\n    width=\"30%\"\n    :modal=\"false\"\n    :before-close=\"handleClose\"\n  >\n    <el-tree\n      ref=\"tree\"\n      default-expand-all\n      :data=\"data\"\n      show-checkbox\n      node-key=\"id\"\n      :default-checked-keys=\"checkedKeys\"\n      :props=\"defaultProps\"\n      highlight-current\n      :render-content=\"renderContent\"\n    />\n    <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"handleReset\">重 置</el-button>\n      <el-button type=\"primary\" @click=\"handleSubmit('form')\">确 定</el-button>\n    </span>\n  </el-dialog>\n</template>\n\n<script>\nimport { getRoleResoureIds, setRoleAuthorities, queryMenuList } from '@/api/role'\n\nexport default {\n  name: 'AuthForm',\n  // eslint-disable-next-line vue/require-prop-types\n  props: ['visable', 'roleId'],\n  data() {\n    return {\n      checkedKeys: [],\n      data: [/* {\n              id: 1,\n              name: '系统管理',\n              isMenu:true,\n              children: [{\n                id: 4,\n                name: '用户管理',\n                isMenu:true,\n                children: [{\n                  id: 9,\n                  name: '用户删除',\n                  isMenu:false\n                }, {\n                  id: 10,\n                  name: '用户修改',\n                  isMenu:false\n                }]\n              }]\n            }*/],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      }\n    }\n  },\n  created() {\n    this.getAuthorities()\n  },\n  methods: {\n    handleSubmit() {\n      // false 是否只包含叶子节点    //true 是否包含半选状态节点\n\n      const halfTreeKeys = this.$refs.tree.getHalfCheckedKeys()\n      console.log(halfTreeKeys)\n      const treeKeys = this.$refs.tree.getCheckedKeys()\n      setRoleAuthorities(this.roleId, halfTreeKeys.concat(treeKeys)).then(response => {\n        this.handleClose()\n        this.$message({\n          showClose: true,\n          message: '权限设置成功',\n          type: 'success'\n        })\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    getAuthorities() {\n      const that = this\n      getRoleResoureIds(this.roleId).then(response => {\n        that.checkedKeys = response.data.data\n      }).catch(error => {\n        console.log(error)\n      })\n      console.log(this.checkedKeys)\n      queryMenuList().then(response => {\n        this.data = response.data.data\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    renderContent(h, { node, data, store }) {\n      return (\n        <span class='custom-tree-node'>\n          {this.iconClass(data.isMenu)}\n          <span style='margin-left:5px;'>{node.label}</span>\n        </span>\n      )\n    },\n    iconClass(isMenu) {\n      if (isMenu) {\n        return <i v-else class='el-icon-menu'></i>\n      } else {\n        return <i class='el-icon-document'></i>\n      }\n    },\n    handleClose() {\n      this.$emit('handleAuthHide')\n    },\n    handleReset() {\n      this.$refs.tree.setCheckedKeys([])\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .custom-tree-node {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 14px;\n    padding-right: 8px;\n  }\n</style>\n"]}]}