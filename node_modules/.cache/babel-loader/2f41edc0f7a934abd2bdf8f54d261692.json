{"remainingRequest":"/Users/work/webworkspace/cxy-web/node_modules/babel-loader/lib/index.js!/Users/work/webworkspace/cxy-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/work/webworkspace/cxy-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/work/webworkspace/cxy-web/src/views/system/role/AuthForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/work/webworkspace/cxy-web/src/views/system/role/AuthForm.vue","mtime":1611017324525},{"path":"/Users/work/webworkspace/cxy-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/work/webworkspace/cxy-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/work/webworkspace/cxy-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/work/webworkspace/cxy-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZ2V0TWVudUJ1dHRvbnNUcmVlQnlSb2xlSWQsIHNldFJvbGVBdXRob3JpdGllcyB9IGZyb20gJ0AvYXBpL3JvbGUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0F1dGhGb3JtJywKICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgdnVlL3JlcXVpcmUtcHJvcC10eXBlcwogIHByb3BzOiBbJ3Zpc2FibGUnLCAncm9sZUlkJ10sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoZWNrZWRLZXlzOiBbXSwKICAgICAgZGF0YTogWwogICAgICAgIC8qIHsKICAgICAgICAgaWQ6IDEsCiAgICAgICAgIG5hbWU6ICfns7vnu5/nrqHnkIYnLAogICAgICAgICBpc01lbnU6dHJ1ZSwKICAgICAgICAgY2hpbGRyZW46IFt7CiAgICAgICAgICAgaWQ6IDQsCiAgICAgICAgICAgbmFtZTogJ+eUqOaIt+euoeeQhicsCiAgICAgICAgICAgaXNNZW51OnRydWUsCiAgICAgICAgICAgY2hpbGRyZW46IFt7CiAgICAgICAgICAgICBpZDogOSwKICAgICAgICAgICAgIG5hbWU6ICfnlKjmiLfliKDpmaQnLAogICAgICAgICAgICAgaXNNZW51OmZhbHNlCiAgICAgICAgICAgfSwgewogICAgICAgICAgICAgaWQ6IDEwLAogICAgICAgICAgICAgbmFtZTogJ+eUqOaIt+S/ruaUuScsCiAgICAgICAgICAgICBpc01lbnU6ZmFsc2UKICAgICAgICAgICB9XQogICAgICAgICB9XQogICAgICAgIH0qLwogICAgICBdLAogICAgICBkZWZhdWx0UHJvcHM6IHsKICAgICAgICBjaGlsZHJlbjogJ2NoaWxkcmVuJywKICAgICAgICBsYWJlbDogJ25hbWUnCiAgICAgIH0KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRBdXRob3JpdGllcygpOwogIH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlU3VibWl0OiBmdW5jdGlvbiBoYW5kbGVTdWJtaXQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAvLyBmYWxzZSDmmK/lkKblj6rljIXlkKvlj7blrZDoioLngrkgICAgLy90cnVlIOaYr+WQpuWMheWQq+WNiumAieeKtuaAgeiKgueCuQogICAgICB2YXIgaGFsZlRyZWVLZXlzID0gdGhpcy4kcmVmcy50cmVlLmdldEhhbGZDaGVja2VkS2V5cygpOwogICAgICBjb25zb2xlLmxvZyhoYWxmVHJlZUtleXMpOwogICAgICB2YXIgdHJlZUtleXMgPSB0aGlzLiRyZWZzLnRyZWUuZ2V0Q2hlY2tlZEtleXMoKTsKICAgICAgc2V0Um9sZUF1dGhvcml0aWVzKHRoaXMucm9sZUlkLCBoYWxmVHJlZUtleXMuY29uY2F0KHRyZWVLZXlzKSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5oYW5kbGVDbG9zZSgpOwoKICAgICAgICBfdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICBzaG93Q2xvc2U6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn5p2D6ZmQ6K6+572u5oiQ5YqfJywKICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJwogICAgICAgIH0pOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgIH0pOwogICAgfSwKICAgIGdldEF1dGhvcml0aWVzOiBmdW5jdGlvbiBnZXRBdXRob3JpdGllcygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICAvLyBjb25zdCB0aGF0ID0gdGhpcwogICAgICBnZXRNZW51QnV0dG9uc1RyZWVCeVJvbGVJZCh0aGlzLnJvbGVJZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczIuZGF0YSA9IHJlc3BvbnNlLmRhdGE7CgogICAgICAgIF90aGlzMi5nZXRBbGxDaGVja2VkS2V5cyhyZXNwb25zZS5kYXRhKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KTsKICAgIH0sCiAgICBnZXRBbGxDaGVja2VkS2V5czogZnVuY3Rpb24gZ2V0QWxsQ2hlY2tlZEtleXMocmVzdWx0RGF0YSkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJlc3VsdERhdGEuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIGlmICh1bmRlZmluZWQgIT09IGl0ZW0uY2hlY2tlZCkgewogICAgICAgICAgX3RoaXMzLmNoZWNrZWRLZXlzLnB1c2goaXRlbS5tZW51QnV0dG9uSWQpOwogICAgICAgIH0KCiAgICAgICAgaWYgKHVuZGVmaW5lZCAhPT0gaXRlbS5jaGlsZHJlbikgewogICAgICAgICAgX3RoaXMzLmdldEFsbENoZWNrZWRLZXlzKGl0ZW0uY2hpbGRyZW4pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgcmVuZGVyQ29udGVudDogZnVuY3Rpb24gcmVuZGVyQ29udGVudChoLCBfcmVmKSB7CiAgICAgIHZhciBub2RlID0gX3JlZi5ub2RlLAogICAgICAgICAgZGF0YSA9IF9yZWYuZGF0YSwKICAgICAgICAgIHN0b3JlID0gX3JlZi5zdG9yZTsKICAgICAgcmV0dXJuIGgoInNwYW4iLCB7CiAgICAgICAgImNsYXNzIjogJ2N1c3RvbS10cmVlLW5vZGUnCiAgICAgIH0sIFt0aGlzLmljb25DbGFzcyhkYXRhLnR5cGUpLCBoKCJzcGFuIiwgewogICAgICAgICJzdHlsZSI6ICdtYXJnaW4tbGVmdDo1cHg7JwogICAgICB9LCBbbm9kZS5sYWJlbF0pXSk7CiAgICB9LAogICAgaWNvbkNsYXNzOiBmdW5jdGlvbiBpY29uQ2xhc3ModHlwZSkgewogICAgICB2YXIgaCA9IHRoaXMuJGNyZWF0ZUVsZW1lbnQ7CgogICAgICBpZiAodHlwZSkgewogICAgICAgIHJldHVybiBoKCJpIiwgewogICAgICAgICAgImNsYXNzIjogJ2VsLWljb24tZG9jdW1lbnQnCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGgoImkiLCB7CiAgICAgICAgICAiY2xhc3MiOiAnZWwtaWNvbi1tZW51JwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgaGFuZGxlQ2hlY2tDaGFuZ2U6IGZ1bmN0aW9uIGhhbmRsZUNoZWNrQ2hhbmdlKGRhdGEsIGNoZWNrZWQsIGluZGV0ZXJtaW5hdGUpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICBzZXRSb2xlQXV0aG9yaXRpZXMoZGF0YS5tZW51QnV0dG9uSWQsIGNoZWNrZWQsIHRoaXMucm9sZUlkKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzNC4kbWVzc2FnZSh7CiAgICAgICAgICBzaG93Q2xvc2U6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn5p2D6ZmQ6K6+572u5oiQ5YqfJywKICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJwogICAgICAgIH0pOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZUNsb3NlOiBmdW5jdGlvbiBoYW5kbGVDbG9zZSgpIHsKICAgICAgdGhpcy4kZW1pdCgnaGFuZGxlQXV0aEhpZGUnKTsKICAgIH0sCiAgICBoYW5kbGVSZXNldDogZnVuY3Rpb24gaGFuZGxlUmVzZXQoKSB7CiAgICAgIHRoaXMuJHJlZnMudHJlZS5zZXRDaGVja2VkS2V5cyhbXSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["AuthForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SAAA,0BAAA,EAAA,kBAAA,QAAA,YAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA;AACA,EAAA,KAAA,EAAA,CAAA,SAAA,EAAA,QAAA,CAHA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA;AAAA;;;;;;;;;;;;;;;;;;;AAAA,OAFA;AAqBA,MAAA,YAAA,EAAA;AACA,QAAA,QAAA,EAAA,UADA;AAEA,QAAA,KAAA,EAAA;AAFA;AArBA,KAAA;AA0BA,GA/BA;AAgCA,EAAA,OAhCA,qBAgCA;AACA,SAAA,cAAA;AACA,GAlCA;AAmCA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AACA;AACA,UAAA,YAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,YAAA;AACA,UAAA,QAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AACA,MAAA,kBAAA,CAAA,KAAA,MAAA,EAAA,YAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,WAAA;;AACA,QAAA,KAAA,CAAA,QAAA,CAAA;AACA,UAAA,SAAA,EAAA,IADA;AAEA,UAAA,OAAA,EAAA,QAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SAAA;AAKA,OAPA,EAOA,KAPA,CAOA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,OATA;AAUA,KAhBA;AAiBA,IAAA,cAjBA,4BAiBA;AAAA;;AACA;AACA,MAAA,0BAAA,CAAA,KAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,MAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;;AACA,QAAA,MAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,IAAA;AACA,OAHA,EAGA,KAHA,CAGA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,OALA;AAMA,KAzBA;AA0BA,IAAA,iBA1BA,6BA0BA,UA1BA,EA0BA;AAAA;;AACA,MAAA,UAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,SAAA,KAAA,IAAA,CAAA,OAAA,EAAA;AACA,UAAA,MAAA,CAAA,WAAA,CAAA,IAAA,CAAA,IAAA,CAAA,YAAA;AACA;;AACA,YAAA,SAAA,KAAA,IAAA,CAAA,QAAA,EAAA;AACA,UAAA,MAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,QAAA;AACA;AACA,OAPA;AAQA,KAnCA;AAoCA,IAAA,aApCA,yBAoCA,CApCA,QAoCA;AAAA,UAAA,IAAA,QAAA,IAAA;AAAA,UAAA,IAAA,QAAA,IAAA;AAAA,UAAA,KAAA,QAAA,KAAA;AACA;AAAA,iBACA;AADA,UAEA,KAAA,SAAA,CAAA,IAAA,CAAA,IAAA,CAFA;AAAA,iBAGA;AAHA,UAGA,IAAA,CAAA,KAHA;AAMA,KA3CA;AA4CA,IAAA,SA5CA,qBA4CA,IA5CA,EA4CA;AAAA;;AACA,UAAA,IAAA,EAAA;AACA;AAAA,mBAAA;AAAA;AACA,OAFA,MAEA;AACA;AAAA,mBAAA;AAAA;AACA;AACA,KAlDA;AAmDA,IAAA,iBAnDA,6BAmDA,IAnDA,EAmDA,OAnDA,EAmDA,aAnDA,EAmDA;AAAA;;AACA,MAAA,kBAAA,CAAA,IAAA,CAAA,YAAA,EAAA,OAAA,EAAA,KAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,SAAA,EAAA,IADA;AAEA,UAAA,OAAA,EAAA,QAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SAAA;AAKA,OANA,EAMA,KANA,CAMA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,OARA;AASA,KA7DA;AA8DA,IAAA,WA9DA,yBA8DA;AACA,WAAA,KAAA,CAAA,gBAAA;AACA,KAhEA;AAiEA,IAAA,WAjEA,yBAiEA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,cAAA,CAAA,EAAA;AACA;AAnEA;AAnCA,CAAA","sourcesContent":["<template>\n  <el-dialog\n    title=\"权限控制\"\n    :visible=\"visable\"\n    width=\"30%\"\n    :modal=\"false\"\n    :before-close=\"handleClose\"\n  >\n    <el-tree\n      ref=\"tree\"\n      default-expand-all\n      :data=\"data\"\n      show-checkbox\n      node-key=\"menuButtonId\"\n      :default-checked-keys=\"checkedKeys\"\n      :props=\"defaultProps\"\n      highlight-current\n      :check-strictly=\"true\"\n      :render-content=\"renderContent\"\n      @check-change=\"handleCheckChange\"\n    />\n    <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"handleReset\">重 置</el-button>\n      <el-button type=\"primary\" @click=\"handleClose\">关 闭</el-button>\n      <!-- <el-button type=\"primary\" @click=\"handleSubmit('form')\">确 定</el-button> -->\n    </span>\n  </el-dialog>\n</template>\n\n<script>\nimport { getMenuButtonsTreeByRoleId, setRoleAuthorities } from '@/api/role'\n\nexport default {\n  name: 'AuthForm',\n  // eslint-disable-next-line vue/require-prop-types\n  props: ['visable', 'roleId'],\n  data() {\n    return {\n      checkedKeys: [],\n      data: [/* {\n              id: 1,\n              name: '系统管理',\n              isMenu:true,\n              children: [{\n                id: 4,\n                name: '用户管理',\n                isMenu:true,\n                children: [{\n                  id: 9,\n                  name: '用户删除',\n                  isMenu:false\n                }, {\n                  id: 10,\n                  name: '用户修改',\n                  isMenu:false\n                }]\n              }]\n            }*/],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      }\n    }\n  },\n  created() {\n    this.getAuthorities()\n  },\n  methods: {\n    handleSubmit() {\n      // false 是否只包含叶子节点    //true 是否包含半选状态节点\n      const halfTreeKeys = this.$refs.tree.getHalfCheckedKeys()\n      console.log(halfTreeKeys)\n      const treeKeys = this.$refs.tree.getCheckedKeys()\n      setRoleAuthorities(this.roleId, halfTreeKeys.concat(treeKeys)).then(response => {\n        this.handleClose()\n        this.$message({\n          showClose: true,\n          message: '权限设置成功',\n          type: 'success'\n        })\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    getAuthorities() {\n      // const that = this\n      getMenuButtonsTreeByRoleId(this.roleId).then(response => {\n        this.data = response.data\n        this.getAllCheckedKeys(response.data)\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    getAllCheckedKeys(resultData) {\n      resultData.forEach(item => {\n        if (undefined !== item.checked) {\n          this.checkedKeys.push(item.menuButtonId)\n        }\n        if (undefined !== item.children) {\n          this.getAllCheckedKeys(item.children)\n        }\n      })\n    },\n    renderContent(h, { node, data, store }) {\n      return (\n        <span class='custom-tree-node'>\n          {this.iconClass(data.type)}\n          <span style='margin-left:5px;'>{node.label}</span>\n        </span>\n      )\n    },\n    iconClass(type) {\n      if (type) {\n        return <i class='el-icon-document'></i>\n      } else {\n        return <i class='el-icon-menu'></i>\n      }\n    },\n    handleCheckChange(data, checked, indeterminate) {\n      setRoleAuthorities(data.menuButtonId, checked, this.roleId).then(response => {\n        this.$message({\n          showClose: true,\n          message: '权限设置成功',\n          type: 'success'\n        })\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    handleClose() {\n      this.$emit('handleAuthHide')\n    },\n    handleReset() {\n      this.$refs.tree.setCheckedKeys([])\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .custom-tree-node {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 14px;\n    padding-right: 8px;\n  }\n</style>\n"],"sourceRoot":"src/views/system/role"}]}